/// Game Object
{
	"id": "string",
	"deck": "Card[]",
	"team1": "Team",
	"team2": "Team"
}

// Team Object
{
	"id": "string",
	"name": "string",
	"wonCards": "Card[]",
	"passedCards": "Card[]",
	"score": "integer",
	"players": "Player[]"
}

// Player Object
{
	"id": "string",
	"name": "string",
	"teamId": "string"
}

// Card Object
{
	"id": "string",
	"title": "string"
}

=====================================================================
///// API SPEC //////
// GET Game 
// Takes in payload (GAME ID):
{
	"id": "string"
}
// Returns 200 if game exists, else 400
=====================================================================
// POST New
// Takes in optional payload(GAME ID):
{
	"id": "string"
}
// Returns a new Game object with the specified ID. If 
// such a game already exists, return 400. Otherwise,
// return 200
// TODO: Make an additional API that just checks ID availability
=====================================================================
// POST Next
// Cycles to the next turn
// Takes in payload (GAME ID):
{
	"id": "string"
}
// Returns 200 if game exists and is in progress, else 400
=====================================================================
// POST Start
// Starts the indicated team's turn
// Takes in payload (GAME ID):
{
	"game_id": "string",
	"team_id": "string"
}
// Returns 200 if game exists and it is the indicated team's turn,
// else 400
=====================================================================
// PUT play
// Takes in payload:
{
	"id": "string",
	"game_id": "string",
	"team_id": "string",
	"action_type": "string"
}
// Action type should be `guess` or `pass`
// 200 if team ID, game ID and action type are valid, else 400
=====================================================================
